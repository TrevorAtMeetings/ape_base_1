Enhanced autocomplete initialized successfully
VM6 eruda.js:2 Enhanced autocomplete already initialized, skipping...
2VM6 eruda.js:2 Stored typed flow rate (metric): 8
2VM6 eruda.js:2 Stored typed flow rate (metric): 86
2VM6 eruda.js:2 Stored typed head (metric): 2
2VM6 eruda.js:2 Stored typed head (metric): 20
Console.js:61 Force chart refresh script loaded - clearing chart cache
Console.js:61 Chart cache timestamp: 1754401786754
Console.js:61 Initializing charts with: 4/5 ALE
Console.js:61 AI Analysis Loading: {pumpCode: '4/5 ALE', flow: '86.0', head: '20.0', efficiency: '76.8', power: '6.12', …}
Console.js:61 Charts.js: DOM loaded (attempt 1), checking for charts...
Console.js:61 Charts.js: Chart containers found: (4) ['head-flow-chart', 'efficiency-flow-chart', 'power-flow-chart', 'npshr-flow-chart']
Console.js:61 Charts.js: Data from chartData element: {pumpCode: '4/5 ALE', flowRate: 86, head: 20}
Console.js:61 Charts.js: Initializing charts with data: {pumpCode: '4/5 ALE', flowRate: 86, head: 20}
Console.js:61 Charts.js: Starting renderAllCharts for: {pumpCode: '4/5 ALE', flowRate: 86, head: 20}
Console.js:61 Charts.js: Made container head-flow-chart visible with loading indicator
Console.js:61 Charts.js: Made container efficiency-flow-chart visible with loading indicator
Console.js:61 Charts.js: Made container power-flow-chart visible with loading indicator
Console.js:61 Charts.js: Made container npshr-flow-chart visible with loading indicator
Console.js:61 Charts.js: loadChartData called with: {pumpCode: '4/5 ALE', flowRate: 86, head: 20}
Console.js:61 Charts.js: Encoded pump code: NC81IEFMRQ
Console.js:61 Charts.js: Fetching from URL: /api/chart_data_safe/NC81IEFMRQ?flow=86&head=20
Console.js:61 Professional pump report loaded, initializing charts...
Console.js:61 Professional report data: {pumpCode: '4/5 ALE', flowRate: 86, head: 20}
Console.js:61 Charts.js: Starting renderAllCharts for: {pumpCode: '4/5 ALE', flowRate: 86, head: 20}
Console.js:61 Charts.js: Made container head-flow-chart visible with loading indicator
Console.js:61 Charts.js: Made container efficiency-flow-chart visible with loading indicator
Console.js:61 Charts.js: Made container power-flow-chart visible with loading indicator
Console.js:61 Charts.js: Made container npshr-flow-chart visible with loading indicator
Console.js:61 Charts.js: loadChartData called with: {pumpCode: '4/5 ALE', flowRate: 86, head: 20}
Console.js:61 Charts.js: Encoded pump code: NC81IEFMRQ
Console.js:61 Charts.js: Fetching from URL: /api/chart_data_safe/NC81IEFMRQ?flow=86&head=20
Console.js:61 AI Analysis Loading: {pumpCode: '4/5 ALE', flow: '86.0', head: '20.0', efficiency: '76.75', power: '6.12', …}
Console.js:61 Charts.js: Response status: 200
Console.js:61 Charts.js: Response data: {bep_analysis: {…}, curves: Array(3), metadata: {…}, operating_point: {…}, pump_code: '4/5 ALE', …}
Console.js:61 Charts.js: Chart data loaded and stored
Console.js:61 Chart data loaded, rendering with PumpChartsManager
Console.js:61 Charts.js: Rendering head-flow chart...
Console.js:61 Using actual system requirements: {systemFlow: 86, systemHead: 20}
Console.js:61 Charts.js: Attempting to render head-flow chart with 10 traces
Console.js:61 Charts.js: Container ID: head-flow-chart
Console.js:61 Charts.js: Container element: <div id=​"head-flow-chart" style=​"height:​ 450px;​ width:​ 100%;​ min-height:​ 400px;​ background:​ rgb(250, 250, 250)​;​ border:​ 1px dashed rgb(204, 204, 204)​;​ position:​ relative;​ display:​ block;​ visibility:​ visible;​" class=​"js-plotly-plot">​…​</div>​
Console.js:61 Charts.js: Head-flow chart rendered successfully
Console.js:61 Charts.js: Rendering efficiency-flow chart...
Console.js:61 Charts.js: Efficiency-flow chart rendered successfully
Console.js:61 Charts.js: Rendering power-flow chart...
Console.js:61 Charts.js: Power-flow chart rendered successfully
Console.js:61 Charts.js: Rendering npshr-flow chart...
Console.js:61 NPSHr Chart - Curve 1 (134mm Impeller): {flow_data: Array(6), npshr_data: Array(6)}
Console.js:61 NPSHr Chart - Curve 2 (148mm Impeller): {flow_data: Array(6), npshr_data: Array(6)}
Console.js:61 NPSHr Chart - Curve 3 (157mm Impeller): {flow_data: Array(6), npshr_data: Array(6)}
Console.js:61 NPSHr Chart Y-axis range calculation: {allNpsh: Array(18), dataMin: 2.44, dataMax: 3.96, calculatedMinNpsh: 2.364, calculatedMaxNpsh: 4.036}
Console.js:61 NPSHr Chart - All traces before rendering: (6) [{…}, {…}, {…}, {…}, {…}, {…}]
Console.js:61 Charts.js: NPSHr-flow chart rendered successfully
Console.js:61 Charts.js: Charts successfully initialized for pump: 4/5 ALE_86_20
Console.js:61 Charts.js: Response status: 200
Console.js:61 Charts.js: Response data: {bep_analysis: {…}, curves: Array(3), metadata: {…}, operating_point: {…}, pump_code: '4/5 ALE', …}
Console.js:61 Charts.js: Chart data loaded and stored
Console.js:61 Chart data loaded, rendering with PumpChartsManager
Console.js:61 Charts.js: Rendering head-flow chart...
Console.js:61 Using actual system requirements: {systemFlow: 86, systemHead: 20}
Console.js:61 Charts.js: Attempting to render head-flow chart with 10 traces
Console.js:61 Charts.js: Container ID: head-flow-chart
Console.js:61 Charts.js: Container element: <div id=​"head-flow-chart" style=​"height:​ 450px;​ width:​ 100%;​ min-height:​ 400px;​ background:​ rgb(250, 250, 250)​;​ border:​ 1px dashed rgb(204, 204, 204)​;​ position:​ relative;​ display:​ block;​ visibility:​ visible;​" class=​"js-plotly-plot">​…​</div>​
Console.js:61 Charts.js: Head-flow chart rendered successfully
Console.js:61 Charts.js: Rendering efficiency-flow chart...
Console.js:61 Charts.js: Efficiency-flow chart rendered successfully
Console.js:61 Charts.js: Rendering power-flow chart...
Console.js:61 Charts.js: Power-flow chart rendered successfully
Console.js:61 Charts.js: Rendering npshr-flow chart...
Console.js:61 NPSHr Chart - Curve 1 (134mm Impeller): {flow_data: Array(6), npshr_data: Array(6)}
Console.js:61 NPSHr Chart - Curve 2 (148mm Impeller): {flow_data: Array(6), npshr_data: Array(6)}
Console.js:61 NPSHr Chart - Curve 3 (157mm Impeller): {flow_data: Array(6), npshr_data: Array(6)}
Console.js:61 NPSHr Chart Y-axis range calculation: {allNpsh: Array(18), dataMin: 2.44, dataMax: 3.96, calculatedMinNpsh: 2.364, calculatedMaxNpsh: 4.036}
Console.js:61 NPSHr Chart - All traces before rendering: (6) [{…}, {…}, {…}, {…}, {…}, {…}]
Console.js:61 Charts.js: NPSHr-flow chart rendered successfully
Console.js:61 Charts.js: Charts successfully initialized for pump: 4/5 ALE_86_20