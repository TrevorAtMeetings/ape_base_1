Agent, thank you for generating the PDF report. The overall branding and structure look very professional!
However, we have two critical issues with the PDF content for the '5 K' pump (and potentially others):
Blank Performance Charts: The charts on Page 6 and Page 11 are empty.
Incorrect Performance Data: The textual sections (Performance Analysis, Selected Pump Specifications, Operating Point Analysis, Key Insights) and tables are showing 0.0 m Head, 0.0% Efficiency, 0.0 kW Power, and 0.0 m NPSHr for the '5 K' pump, even though the console logs (and previously the web summary cards) showed calculated (extrapolated) values like Head: 22.9m, Efficiency: 59.0%, Power: 114.2kW.
These issues need to be addressed urgently.
Please investigate and implement the following fixes:
Ensure generate_pump_charts Uses Real, Calculated Data & Saves Correctly:
File: app/routes.py (or wherever generate_pump_charts is defined).
Action:
This function must use the actual calculated operating_point and the actual curve data from parsed_pump_obj.curves for the selected impeller to generate all four Matplotlib charts (Head, Efficiency, Power, NPSH). Remove all dummy plotting data (x_dummy, y_dummy).
Ensure it correctly marks the operating_point (e.g., (operating_point['flow_m3hr'], operating_point['achieved_head_m']) on the Head chart).
NPSH Chart Handling: If operating_point['achieved_npshr_m'] is None (or if the flow_vs_npshr curve data is unavailable/all zeros), this function should either not generate an NPSH chart image, or generate one with a clear "NPSH Data Not Available" message. The chart_paths dictionary should reflect this (e.g., chart_paths['npsh'] could be None or point to a placeholder image).
File Paths for WeasyPrint: When saving charts with plt.savefig(), ensure the path is correct. When WeasyPrint renders HTML, url_for('static', ...) might not resolve to a local file path it can access directly. It's often more reliable for WeasyPrint to use absolute local file paths or base64 encoded images.
Option A (Absolute Paths): Save charts to app.config['UPLOAD_FOLDER']. Then, in ape_report_template.html, construct an absolute file URI for the src attribute: src="file:///home/runner/workspace/app/static/temp/chart_name.png". (The exact root path needs to be correct for the Replit environment).
Option B (Base64 Embedding - Often More Robust for WeasyPrint): Modify generate_pump_charts to save the plot to a BytesIO object, then base64 encode it, and pass this base64 string to the template to be used in an <img src="data:image/png;base64,{{ base64_image_string }}"> tag. This embeds the image directly in the HTML WeasyPrint processes.
Trace Data Flow for PDF Report Context:
File: app/routes.py (specifically the /generate_pdf/<pump_code> route and the generate_pdf_report function it calls if it's separate, or the logic within the pdf_generator.py module).
Action:
When this route/function prepares data for the "5 K" pump (and others), add detailed logging to show the selected_evaluation or parsed_pump object and its operating_point dictionary just before it's passed to the generate_pdf function (from pdf_generator.py) or used to render ape_report_template.html.
Why is it getting 0.0 values for Head, Efficiency, Power for the "5 K" pump in the PDF context, when the /pump-options route calculated and logged non-zero (extrapolated) values? There must be a difference in how find_best_pumps or evaluate_pump_for_requirements is being called or how its results are processed specifically for PDF generation.
Is the minimal_evaluation fallback in the /generate_pdf route being triggered incorrectly for "5 K"? That fallback uses 0s.
Ensure Consistent Use of pump_engine.py: Verify that the PDF generation path uses the same robust functions from pump_engine.py (like find_best_pumps, calculate_operating_point) that the /pump-options route uses.
Update ape_report_template.html for NPSH "N/A":
Action: Similar to the web UI summary cards, if selected_pump.operating_point.achieved_npshr_m is None (or a similar indicator for no data), the PDF template should display "N/A" or "Data Unavailable" for NPSHr values, not "0.0 meters." Apply the same conditional formatting logic.
Priority:
Fix the data pipeline for the PDF context to ensure it uses the correctly calculated (extrapolated if necessary) operating point data for pumps like "5 K" (Item #2).
Fix generate_pump_charts to use this real data and ensure images are correctly embedded/pathed for WeasyPrint (Item #1).
Update PDF template for NPSH "N/A" (Item #3).
After these fixes, please test PDF generation for all three sample pumps and confirm that both the textual data and the charts are accurate and correctly displayed.