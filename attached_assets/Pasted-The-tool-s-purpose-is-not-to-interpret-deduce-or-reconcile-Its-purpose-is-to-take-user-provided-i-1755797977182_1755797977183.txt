The tool's purpose is not to interpret, deduce, or reconcile. Its purpose is to take user-provided inputs, pass them to the primary "Brain" engine, and display the raw, unfiltered result. The discrepancy itself is the valuable output.
The Required Implementation Logic:
Inputs: The user provides a complete data point for a specific pump model:
Flow
Head (This is the user's "ground truth")
Diameter (This is a mandatory input for this process)
Processing:
The calibration tool takes the user's Flow and Diameter inputs.
It makes a single call to the primary, existing pump selection engine (the "Brain").
The request to the engine is simple: "For this specific pump model, at this exact Flow and Diameter, what is the predicted Head?"
The tool receives the single, unfiltered Head value back from the engine.
Output & User Action:
The UI must present a simple, honest, side-by-side comparison. There will be no "fix" or automatic calibration.
The screen will display:
Your Submitted Head: 27.8m (at the specified Flow and 390mm Diameter)
Brain's Predicted Head: 43.99m (at the same Flow and 390mm Diameter)
Discrepancy: -36.8% (Displayed prominently in red)
The User's Decision Point:
Beneath this stark comparison, the user is presented with two explicit and mutually exclusive actions. This is where the responsibility is correctly assigned.
Button 1: "Discard - My Input Data is Incorrect"
Function: This is the default and most likely action. It aborts the process entirely. It acknowledges that the user's "ground truth" was flawed. No changes are made to the system.
Button 2: "Flag for Engineering Review"
Function: This is the critical escalation path. If the user is absolutely certain their data is correct, it implies that our core pump curve data in the database is fundamentally wrong.
Action: Clicking this button must:
Prevent calibration. The system does not accept this flawed data.
Automatically create a high-priority ticket in our internal system (e.g., Jira, GitHub Issues).
The ticket must contain all relevant data: Pump Model, User-submitted data point (Flow, Head, Diameter), the Brain's conflicting prediction, and the user's ID.
Display a message to the user: "Thank you. This discrepancy has been flagged for review by our engineering team. This pump model cannot be calibrated until the source data is verified."
Why This is the Correct and Final Solution:
Absolute Logical Purity: It adheres strictly to your command. The calibration tool introduces zero new logic.
Maintains Data Integrity: It creates a powerful gate. The system refuses to be calibrated with bad data. It forces a resolution instead of embedding an error.
Identifies the True Source of Error: This process correctly identifies where the error lies. Either the user's input is bad (and they discard it), or our foundational database is bad (and it gets flagged for an engineer to fix).
No Workarounds: There are no warnings to ignore, no special calculations, no hidden rules. It is a simple, transparent validation of the one and only source of truth: the pump selection engine.
Please implement this "Pure Validation Interface" immediately. This is the correct path to ensuring the long-term reliability and trustworthiness of the entire system.