modules = ["python-3.11"]
[nix]
channel = "stable-24_05"
packages = ["cairo", "ffmpeg-full", "fontconfig", "freetype", "ghostscript", "glib", "gobject-introspection", "gtk3", "harfbuzz", "libxcrypt", "openssl", "pango", "pkg-config", "postgresql", "qhull", "tcl", "tk", "xsimd"]
[deployment]
deploymentTarget = "autoscale"
run = ["sh", "-c", "gunicorn --bind 0.0.0.0:8080 app:app"]

[workflows]

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:8080 --reuse-port --reload app:app"
waitForPort = 8080

[[workflows.workflow]]
name = "Run Flask App"
author = 37676800
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python app.py"

[[workflows.workflow]]
name = "Development Server"
author = 37676800
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python app.py"

[[workflows.workflow]]
name = "Production Server"
author = 37676800
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --workers 2 --timeout 120 app:app"

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 8080
externalPort = 80

[[ports]]
localPort = 8081
externalPort = 8081

[[ports]]
localPort = 8082
externalPort = 3000
